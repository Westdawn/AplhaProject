//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForexOrderService.Information
{
    using System;
    using ForexOrderService.Information.Core;
    
    
    /// <summary>
    /// 今日汇率
    /// </summary>
    public class CurrencyExchangeMessage
    {
        
        public const string INDEX_NAME = "CurrencyExchange";
        
        private const string _programException = "ProgramException";
        
        private const string _currencyCodeIsNull = "CurrencyCodeIsNull";
        
        private const string _cityIDMustGreater0 = "CityIDMustGreater0";
        
        private const string _currencyExchangePending = "CurrencyExchangePending";
        
        private const string _currencyExchangeOffline = "CurrencyExchangeOffline";
        
        private const string _overDaySumLimited = "OverDaySumLimited";
        
        private const string _overMonthSumLimited = "OverMonthSumLimited";
        
        private const string _lessThan500RMB = "LessThan500RMB";
        
        private const string _exchangeRateIsNotNew = "ExchangeRateIsNotNew";
        
        private const string _isAlreadyInteger = "IsAlreadyInteger";
        
        private const string _overSumLimited = "OverSumLimited";
        
        private const string _exchangeAmountMustGreatThanMinPurAmount = "ExchangeAmountMustGreatThanMinPurAmount";
        
        private const string _isNeedInteger = "IsNeedInteger";
        
        private const string _exchangeAndPaymentAmountIsLessThan0 = "ExchangeAndPaymentAmountIsLessThan0";
        
        private const string _exchangeAndPaymentAmountIsTooLarge = "ExchangeAndPaymentAmountIsTooLarge";
        
        private const string _exchangeRateIsError = "ExchangeRateIsError";
        
        private const string _lowestExchangeNotExist = "LowestExchangeNotExist";
        
        private const string _needReturnIndex = "NeedReturnIndex";
        
        private const string _currencyExchangeGetIntFail = "CurrencyExchangeGetIntFail";
        
        private const string _currencyExchangeGetPayFail = "CurrencyExchangeGetPayFail";
        
        private const string _currencyExchangeQueryListIsNull = "CurrencyExchangeQueryListIsNull";
        
        private static MessageIndex _index;
        
        /// <summary>
        /// 索引属性
        /// </summary>
        private static MessageIndex Index
        {
            get
            {
                return _index ?? (_index = MessageCache.GetIndex(INDEX_NAME));
            }
        }
        
        /// <summary>
        /// 3500 接口异常
        /// </summary>
        public static Message ProgramException
        {
            get
            {
                return Index[_programException];
            }
        }
        
        /// <summary>
        /// 3501 货币代码不能为空
        /// </summary>
        public static Message CurrencyCodeIsNull
        {
            get
            {
                return Index[_currencyCodeIsNull];
            }
        }
        
        /// <summary>
        /// 3502 城市ID不能小于0
        /// </summary>
        public static Message CityIDMustGreater0
        {
            get
            {
                return Index[_cityIDMustGreater0];
            }
        }
        
        /// <summary>
        /// 3503 当前城市下的网点暂停销售
        /// </summary>
        public static Message CurrencyExchangePending
        {
            get
            {
                return Index[_currencyExchangePending];
            }
        }
        
        /// <summary>
        /// 3504 当前城市下的网点全线下线
        /// </summary>
        public static Message CurrencyExchangeOffline
        {
            get
            {
                return Index[_currencyExchangeOffline];
            }
        }
        
        /// <summary>
        /// 3505 超过日限额
        /// </summary>
        public static Message OverDaySumLimited
        {
            get
            {
                return Index[_overDaySumLimited];
            }
        }
        
        /// <summary>
        /// 3506 超过月限额
        /// </summary>
        public static Message OverMonthSumLimited
        {
            get
            {
                return Index[_overMonthSumLimited];
            }
        }
        
        /// <summary>
        /// 3507 支付金额不足500人民币
        /// </summary>
        public static Message LessThan500RMB
        {
            get
            {
                return Index[_lessThan500RMB];
            }
        }
        
        /// <summary>
        /// 3508 汇率不是最新的
        /// </summary>
        public static Message ExchangeRateIsNotNew
        {
            get
            {
                return Index[_exchangeRateIsNotNew];
            }
        }
        
        /// <summary>
        /// 3509 已经取整
        /// </summary>
        public static Message IsAlreadyInteger
        {
            get
            {
                return Index[_isAlreadyInteger];
            }
        }
        
        /// <summary>
        /// 3510 兑换金额已超过{0}限额，请调整兑换金额。
        /// </summary>
        public static Message OverSumLimited
        {
            get
            {
                return Index[_overSumLimited];
            }
        }
        
        /// <summary>
        /// 3511 购汇金额取整后不能小于最小购买金额
        /// </summary>
        public static Message ExchangeAmountMustGreatThanMinPurAmount
        {
            get
            {
                return Index[_exchangeAmountMustGreatThanMinPurAmount];
            }
        }
        
        /// <summary>
        /// 3512 已超最小兑换面额,需要取整
        /// </summary>
        public static Message IsNeedInteger
        {
            get
            {
                return Index[_isNeedInteger];
            }
        }
        
        /// <summary>
        /// 3513 购汇或者支付金额不能小于等于0
        /// </summary>
        public static Message ExchangeAndPaymentAmountIsLessThan0
        {
            get
            {
                return Index[_exchangeAndPaymentAmountIsLessThan0];
            }
        }
        
        /// <summary>
        /// 3514 输入的金额太大
        /// </summary>
        public static Message ExchangeAndPaymentAmountIsTooLarge
        {
            get
            {
                return Index[_exchangeAndPaymentAmountIsTooLarge];
            }
        }
        
        /// <summary>
        /// 3515 取出的当前在售汇率[{0}]不能小于等于0
        /// </summary>
        public static Message ExchangeRateIsError
        {
            get
            {
                return Index[_exchangeRateIsError];
            }
        }
        
        /// <summary>
        /// 3516 没有找到当前城市下的网点在线售卖的[{0}]货币
        /// </summary>
        public static Message LowestExchangeNotExist
        {
            get
            {
                return Index[_lowestExchangeNotExist];
            }
        }
        
        /// <summary>
        /// 3517 当前所有货币都下线，需要跳转H5首页
        /// </summary>
        public static Message NeedReturnIndex
        {
            get
            {
                return Index[_needReturnIndex];
            }
        }
        
        /// <summary>
        /// 3518 购汇金额取整失败
        /// </summary>
        public static Message CurrencyExchangeGetIntFail
        {
            get
            {
                return Index[_currencyExchangeGetIntFail];
            }
        }
        
        /// <summary>
        /// 3519 获取支付的人民币金额失败
        /// </summary>
        public static Message CurrencyExchangeGetPayFail
        {
            get
            {
                return Index[_currencyExchangeGetPayFail];
            }
        }
        
        /// <summary>
        /// 3520 货币汇率查询请求不能为空
        /// </summary>
        public static Message CurrencyExchangeQueryListIsNull
        {
            get
            {
                return Index[_currencyExchangeQueryListIsNull];
            }
        }
    }
}
