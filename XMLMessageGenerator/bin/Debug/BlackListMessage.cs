//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Forex.MgmtPlatform.Service.Information
{
    using System;
    using Forex.MgmtPlatform.Service.Information.Core;
    
    
    /// <summary>
    /// 黑名单管理
    /// </summary>
    public class BlackListMessage
    {
        
        public const string INDEX_NAME = "BlackList";
        
        private const string _programException = "ProgramException";
        
        private const string _customerIDInValid = "CustomerIDInValid";
        
        private const string _customerInBlackList = "CustomerInBlackList";
        
        private const string _customerWithInValidTypeStatus = "CustomerWithInValidTypeStatus";
        
        private const string _customerIDAlreadyExists = "CustomerIDAlreadyExists";
        
        private const string _parametersRequired = "ParametersRequired";
        
        private const string _oPCodeInvalid = "OPCodeInvalid";
        
        private const string _oldCustomerIDRequiredWhenUpdate = "OldCustomerIDRequiredWhenUpdate";
        
        private const string _oldCustomerIDInvalid = "OldCustomerIDInvalid";
        
        private const string _blackCustomerNotExistWhenUpdate = "BlackCustomerNotExistWhenUpdate";
        
        private const string _blackCustomerNotExistWhenDelete = "BlackCustomerNotExistWhenDelete";
        
        private const string _pagerInfoInValid = "PagerInfoInValid";
        
        private const string _setCtripBlackCustomerFailed = "SetCtripBlackCustomerFailed";
        
        private const string _queryBuyQuotaFailed = "QueryBuyQuotaFailed";
        
        private const string _nameRequired = "NameRequired";
        
        private static MessageIndex _index;
        
        /// <summary>
        /// 索引属性
        /// </summary>
        private static MessageIndex Index
        {
            get
            {
                return _index ?? (_index = MessageCache.GetIndex(INDEX_NAME));
            }
        }
        
        /// <summary>
        /// 1000 服务异常:{0}
        /// </summary>
        public static Message ProgramException
        {
            get
            {
                return Index[_programException];
            }
        }
        
        /// <summary>
        /// 1001 非法的证件号码
        /// </summary>
        public static Message CustomerIDInValid
        {
            get
            {
                return Index[_customerIDInValid];
            }
        }
        
        /// <summary>
        /// 1002 该用户被列入携程黑名单，额度查询无效
        /// </summary>
        public static Message CustomerInBlackList
        {
            get
            {
                return Index[_customerInBlackList];
            }
        }
        
        /// <summary>
        /// 1003 该用户被列入外管预关注或关注名单，额度查询无效
        /// </summary>
        public static Message CustomerWithInValidTypeStatus
        {
            get
            {
                return Index[_customerWithInValidTypeStatus];
            }
        }
        
        /// <summary>
        /// 1004 证件号码相关黑名单信息已经存在
        /// </summary>
        public static Message CustomerIDAlreadyExists
        {
            get
            {
                return Index[_customerIDAlreadyExists];
            }
        }
        
        /// <summary>
        /// 1005 设置携程黑名单时,证件号码,操作人和功能码为必需参数
        /// </summary>
        public static Message ParametersRequired
        {
            get
            {
                return Index[_parametersRequired];
            }
        }
        
        /// <summary>
        /// 1006 设置携程黑名单时传入了无效的功能码
        /// </summary>
        public static Message OPCodeInvalid
        {
            get
            {
                return Index[_oPCodeInvalid];
            }
        }
        
        /// <summary>
        /// 1007 更新携程黑名单时原来证件号码必须传
        /// </summary>
        public static Message OldCustomerIDRequiredWhenUpdate
        {
            get
            {
                return Index[_oldCustomerIDRequiredWhenUpdate];
            }
        }
        
        /// <summary>
        /// 1008 更新携程黑名单时传入原来证件号码不合法
        /// </summary>
        public static Message OldCustomerIDInvalid
        {
            get
            {
                return Index[_oldCustomerIDInvalid];
            }
        }
        
        /// <summary>
        /// 1009 更新携程黑名单时未找到待更新黑名单信息
        /// </summary>
        public static Message BlackCustomerNotExistWhenUpdate
        {
            get
            {
                return Index[_blackCustomerNotExistWhenUpdate];
            }
        }
        
        /// <summary>
        /// 1010 删除携程黑名单时未找到待删除黑名单信息
        /// </summary>
        public static Message BlackCustomerNotExistWhenDelete
        {
            get
            {
                return Index[_blackCustomerNotExistWhenDelete];
            }
        }
        
        /// <summary>
        /// 1011 分页查询的页码和页大小必须大于0
        /// </summary>
        public static Message PagerInfoInValid
        {
            get
            {
                return Index[_pagerInfoInValid];
            }
        }
        
        /// <summary>
        /// 1012 设置携程黑名单失败
        /// </summary>
        public static Message SetCtripBlackCustomerFailed
        {
            get
            {
                return Index[_setCtripBlackCustomerFailed];
            }
        }
        
        /// <summary>
        /// 1013 调用外管服务查询额度失败
        /// </summary>
        public static Message QueryBuyQuotaFailed
        {
            get
            {
                return Index[_queryBuyQuotaFailed];
            }
        }
        
        /// <summary>
        /// 1014 新增或更新携程黑名单时,用户名为必需参数
        /// </summary>
        public static Message NameRequired
        {
            get
            {
                return Index[_nameRequired];
            }
        }
    }
}
